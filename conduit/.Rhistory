getwd()
library(tidyverse)
library(reticulate)
X <-iris[, 1:4]
y <- iris[, 5]
reticulate::source_python("py2r.py")
mdl <- load_model("clf_iris.joblib")
mdl <- load_model("../../clf_iris.joblib")
mdl$predict(X, y)
mdl$predict(X)
mdl$score(X, y)
library(tidyverse)
library(reticulate)
conduit <- function(){
reticulate::source_python("py2r.py")
}
X <-iris[, 1:4]
y <- iris[, 5]
mdl <- load_model("../../clf_iris.joblib")
mdl$score(X, y)
conduit()
mdl <- load_model("../../clf_iris.joblib")
conduit <- function(){
return(reticulate::source_python("py2r.py"))
}
conduit()
mdl <- load_model("../../clf_iris.joblib")
library(tidyverse)
library(reticulate)
reticulate::source_python("py2r.py")
X <-iris[, 1:4]
y <- iris[, 5]
mdl <- load_model("clf_iris.joblib")
mdl$score(X, y)
library(tidyverse)
library(reticulate)
reticulate::source_python("conduit_py/py2r.py")
X <-iris[, 1:4]
y <- iris[, 5]
mdl <- load_model("clf_iris.joblib")
mdl$score(X, y)
conduit <<- reticulate::import("conduit", delay_load = TRUE)
conduit <<- reticulate::import("conduit_py", delay_load = TRUE)
mdl <- lm(iris[, 1:3], iris[,4])
iris[, 1:3]
iris[,4]
mdl <- lm(iris[, 1:3], iris[,4])
names(iris)
mdl <- lm("Petal.Width ~ . - Species", iris)
mdl
summary(model)
summary(mdl)
mdl$residuals
mdl$residuals^2
sum(mdl$residuals^2)
sum(mdl$residuals^2)/length(mdl$residuals)
sqrt(sum(mdl$residuals^2)/length(mdl$residuals))
library(reticulate)
library(tidyverse)
mdl <- lm("Petal.Width ~ . - Species", iris)
repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reticulate)
library(tidyverse)
library(reticulate)
py$y
mdl <- lm("Petal.Width ~ . - Species", iris)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reticulate)
mdl <- lm("Petal.Width ~ . - Species", iris)
library(tidyverse)
library(reticulate)
mdl <- lm("Petal.Width ~ . - Species", iris)
library(tidyverse)
library(reticulate)
mdl <- lm("Petal.Width ~ . - Species", iris)
library(reticulate)
library(tidyverse)
mdl <- lm("Petal.Width ~ . - Species", iris)
rmse <- sqrt(sum(mdl$residuals^2)/length(mdl$residuals)) # 0.1893
repl_python()
save(mdl, "clf_iris.rda")
save(mdl, file = "clf_iris.rda")
repl_python()
py$mdl2$score(X, y)
X <-iris[, 1:4]
y <- iris[, 5]
py$mdl2$score(X, y)
repl_python()
py$mdl3$score(X, y)
?lm
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reticulate)
mdl <- lm("Petal.Width ~ . - Species", iris)
library(reticulate)
library(tidyverse)
mdl <- lm("Petal.Width ~ . - Species", iris)
rmse <- sqrt(sum(mdl$residuals^2)/length(mdl$residuals)) # 0.1893
save(mdl, file = "clf_iris.rda")
repl_python()
library(reticulate)
library(tidyverse)
mdl <- lm("Petal.Width ~ . - Species", iris)
rmse <- sqrt(sum(mdl$residuals^2)/length(mdl$residuals)) # 0.1893
save(mdl, file = "clf_iris.rda")
repl_python()
